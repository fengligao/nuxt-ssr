(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{272:function(t,e,n){var content=n(275);"string"==typeof content&&(content=[[t.i,content,""]]),content.locals&&(t.exports=content.locals);(0,n(47).default)("1c93b39a",content,!0,{sourceMap:!1})},273:function(t,e,n){var content=n(277);"string"==typeof content&&(content=[[t.i,content,""]]),content.locals&&(t.exports=content.locals);(0,n(47).default)("36873827",content,!0,{sourceMap:!1})},274:function(t,e,n){"use strict";var r=n(272);n.n(r).a},275:function(t,e,n){(t.exports=n(46)(!1)).push([t.i,".VueToNuxtLogo{display:inline-block;-webkit-animation:turn 2s linear 1s forwards;animation:turn 2s linear 1s forwards;-webkit-transform:rotateX(180deg);transform:rotateX(180deg);position:relative;overflow:hidden;height:180px;width:245px}.Triangle{position:absolute;top:0;left:0;width:0;height:0}.Triangle--one{border-left:105px solid transparent;border-right:105px solid transparent;border-bottom:180px solid #41b883}.Triangle--two{top:30px;border-left:87.5px solid transparent;border-right:87.5px solid transparent;border-bottom:150px solid #3b8070}.Triangle--three,.Triangle--two{left:35px;-webkit-animation:goright .5s linear 3.5s forwards;animation:goright .5s linear 3.5s forwards}.Triangle--three{top:60px;border-left:70px solid transparent;border-right:70px solid transparent;border-bottom:120px solid #35495e}.Triangle--four{top:120px;left:70px;-webkit-animation:godown .5s linear 3s forwards;animation:godown .5s linear 3s forwards;border-left:35px solid transparent;border-right:35px solid transparent;border-bottom:60px solid #fff}@-webkit-keyframes turn{to{-webkit-transform:rotateX(0deg);transform:rotateX(0deg)}}@keyframes turn{to{-webkit-transform:rotateX(0deg);transform:rotateX(0deg)}}@-webkit-keyframes godown{to{top:180px}}@keyframes godown{to{top:180px}}@-webkit-keyframes goright{to{left:70px}}@keyframes goright{to{left:70px}}",""])},276:function(t,e,n){"use strict";var r=n(273);n.n(r).a},277:function(t,e,n){(t.exports=n(46)(!1)).push([t.i,".container{margin:0 auto;min-height:100vh;display:flex;justify-content:center;align-items:center;text-align:center}.title{font-family:Quicksand,Source Sans Pro,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,sans-serif;display:block;font-weight:300;font-size:100px;color:#35495e;letter-spacing:1px}.subtitle{font-weight:300;font-size:42px;color:#526488;word-spacing:5px;padding-bottom:15px}.links{padding-top:15px}",""])},278:function(t,e,n){"use strict";n.r(e);n(274);var r=n(35),o={components:{Logo:Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"VueToNuxtLogo"},[e("div",{staticClass:"Triangle Triangle--two"}),this._v(" "),e("div",{staticClass:"Triangle Triangle--one"}),this._v(" "),e("div",{staticClass:"Triangle Triangle--three"}),this._v(" "),e("div",{staticClass:"Triangle Triangle--four"})])}],!1,null,null,null).exports}},l=(n(276),Object(r.a)(o,function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("section",{staticClass:"container"},[n("div",[n("logo"),t._v(" "),n("h1",{staticClass:"title"},[t._v("\n        nuxt-project\n      ")]),t._v(" "),n("h2",{staticClass:"subtitle"},[t._v("\n        My riveting Nuxt.js project\n      ")]),t._v(" "),n("p",[t._v("\n        管理 CSS 的推荐方法是简单地使用 *.vue 单个文件组件内的，它提供：\n\n与 HTML 并列同级，组件作用域 CSS\n能够使用预处理器(pre-processor)或 PostCSS\n开发过程中热重载(hot-reload)\n更重要的是，vue-style-loader（vue-loader 内部使用的 loader），具备一些服务器端渲染的特殊功能：\n\n客户端和服务器端的通用编程体验。\n\n在使用 bundleRenderer 时，自动注入关键 CSS(critical CSS)。\n\n如果在服务器端渲染期间使用，可以在 HTML 中收集和内联（使用 template 选项时自动处理）组件的 CSS。在客户端，当第一次使用该组件时，vue-style-loader 会检查这个组件是否已经具有服务器内联(server-inlined)的 CSS - 如果没有，CSS 将通过 标签动态注入。\n\n通用 CSS 提取。\n\n此设置支持使用 extract-text-webpack-plugin 将主 chunk(main chunk) 中的 CSS 提取到单独的 CSS 文件中（使用 template 自动注入），这样可以将文件分开缓存。建议用于存在很多公用 CSS 时。\n\n内部异步组件中的 CSS 将内联为 JavaScript 字符串，并由 vue-style-loader 处理。\n\n# 启用 CSS 提取\n要从 *.vue 文件中提取 CSS，可以使用 vue-loader 的 extractCSS 选项（需要 vue-loader 12.0.0+）\n\n// webpack.config.js\nconst ExtractTextPlugin = require('extract-text-webpack-plugin')\n\n// CSS 提取应该只用于生产环境\n// 这样我们在开发过程中仍然可以热重载\nconst isProduction = process.env.NODE_ENV === 'production'\n\nmodule.exports = {\n  // ...\n  module: {\n    rules: [\n      {\n        test: /\\.vue$/,\n        loader: 'vue-loader',\n        options: {\n          // enable CSS extraction\n          extractCSS: isProduction\n        }\n      },\n      // ...\n    ]\n  },\n  plugins: isProduction\n    // 确保添加了此插件！\n    ? [new ExtractTextPlugin({ filename: 'common.[chunkhash].css' })]\n    : []\n}\n请注意，上述配置仅适用于 *.vue 文件中的样式，然而你也可以使用 将外部 CSS 导入 Vue 组件。\n\n如果你想从 JavaScript 中导入 CSS，例如，import 'foo.css'，你需要配置合适的 loader：\n\nmodule.exports = {\n  // ...\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        // 重要：使用 vue-style-loader 替代 style-loader\n        use: isProduction\n          ? ExtractTextPlugin.extract({\n              use: 'css-loader',\n              fallback: 'vue-style-loader'\n            })\n          : ['vue-style-loader', 'css-loader']\n      }\n    ]\n  },\n  // ...\n}\n# 从依赖模块导入样式\n从 NPM 依赖模块导入 CSS 时需要注意的几点：\n\n在服务器端构建过程中，不应该外置化提取。\n\n在使用 CSS 提取 + 使用 CommonsChunkPlugin 插件提取 vendor 时，如果提取的 CSS 位于提取的 vendor chunk 之中，extract-text-webpack-plugin 会遇到问题。为了解决这个问题，请避免在 vendor chunk 中包含 CSS 文件。客户端 webpack 配置示例如下：\n      ")]),t._v(" "),t._m(0)],1)])},[function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"links"},[e("a",{staticClass:"button--green",attrs:{href:"https://nuxtjs.org/",target:"_blank"}},[this._v("Documentation")]),this._v(" "),e("a",{staticClass:"button--grey",attrs:{href:"https://github.com/nuxt/nuxt.js",target:"_blank"}},[this._v("GitHub")])])}],!1,null,null,null));e.default=l.exports}}]);